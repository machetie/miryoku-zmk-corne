#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Layer Definitions

#define COLEMAK 0
#define QWERTY 1
#define GAMING_COLEMAK 2
#define GAMING_QWERTY 3
#define LAYERS 4
#define NAV 5
#define MOUSE 6
#define MEDIA 7
#define NUM 8
#define SYM 9
#define FN 10

// Behavior configuration

&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <500>;
    quick-release;
};

// Keymap configuration (Colemak-DHm)

/ {
    keymap {
        compatible = "zmk,keymap";

        qwerty {
            // -----------------------------------------------------------------------------------------------------------------------------
            // |        |   Q    |   W    |     F     |     P     |     B     | # |     J     |    L     |    U    |    Y   |   '    |     |
            // | LAYERS | A/LGUI | R/LALT |  S/LCTRL  |  T/LSHFT  |     G     | # |     M     | N/LSHFT  | E/LCTRL | I/LALT | O/LGUI |     |
            // |        |   Z    | X/RALT |     C     |     D     |     V     | # |     K     |    H     |    ,    | ./RALT |   /    |     |
            //                            | ESC/MEDIA | SPACE/NAV | TAB/MOUSE | # | ENTER/SYM | BSPC/NUM | DEL/FN  |

            bindings = <
&trans       &kp Q       &kp W        &kp E        &kp R      &kp T          &kp Y        &kp U        &kp I         &kp O          &kp P  &trans
 &mo 2  &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F      &kp G          &kp H  &mt LSHFT J  &mt LCTRL K    &mt LALT L  &mt LGUI SEMI  &trans
&trans       &kp Z  &mt RALT X        &kp C        &kp V      &kp B          &kp N        &kp M    &kp COMMA  &mt RALT DOT       &kp FSLH  &trans
                                  &lt 4 ESC    &lt 3 TAB  &kp ENTER    &lt 6 SPACE   &lt 5 BSPC    &lt 7 DEL
            >;
        };

        colmak {
            // -----------------------------------------------------------------------------------------------------------------------------
            // |        |   Q    |   W    |     E     |     R     |     T     | # |     Y     |     U    |    I    |    O   |   P    |     |
            // | LAYERS | A/LGUI | S/LALT |  D/LCTRL  |  F/LSHFT  |     G     | # |     H     | J/LSHFT  | K/LCTRR | L/LALT | ;/LGUI |     |
            // |        |   Z    | X/RALT |     C     |     V     |     B     | # |     N     |     M    |    ,    | ./RALT |   /    |     |
            //                            | ESC/MEDIA | SPACE/NAV | TAB/MOUSE | # | ENTER/SYM | BSPC/NUM | DEL/FN  |

            bindings = <
&trans       &kp Q       &kp W        &kp F        &kp P      &kp B          &kp J        &kp L        &kp U         &kp Y     &kp SQT  &trans
 &mo 2  &mt LGUI A  &mt LALT R  &mt LCTRL S  &mt LSHFT T      &kp G          &kp M  &mt LSHFT N  &mt LCTRL E    &mt LALT I  &mt LGUI O  &trans
&trans       &kp Z  &mt RALT X        &kp C        &kp D      &kp V          &kp K        &kp H    &kp COMMA  &mt RALT DOT    &kp FSLH  &trans
                                  &lt 4 ESC  &lt 3 SPACE  &lt 0 TAB    &lt 6 ENTER   &lt 5 BSPC    &lt 7 DEL
            >;
        };

        layers {
            // ---------------------------------------------------------------------------------------------
            // |      |     |     |     |     |     | # |     |     |         |                |     |     |
            // | HELD |     |     |     |     |     | # |     |     | COLEMAK | GAMING_COLEMAK |     |     |
            // |      |     |     |     |     |     | # |     |     | QWERTY  | GAMING_QWERTY  |     |     |
            //                    |     |     |     | # |     |     |         |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans   &to 0   &to 8  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans   &to 1   &to 0  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        navigation {
            // -------------------------------------------------------------------------------------------
            // |     |      |      |       |       |     | # | REDO  | CUT  | COPY | PASTE | UNDO  |     |
            // |     | LGUI | LALT | LCTRL | LSHFT |     | # | CAPS  | LEFT | DOWN | UP    | RIGHT |     |
            // |     |      | RALT |       |       |     | # | INS   | HOME | PGDN | PGUP  | END   |     |
            //                     |       | HELD  |     | # | ENTER | BSPC | DEL  |

            bindings = <
&trans    &trans    &trans     &trans     &trans  &trans      &kp K_REDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_UNDO  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp CAPSLOCK   &kp LEFT    &kp DOWN       &kp UP   &kp RIGHT  &trans
&trans    &trans  &kp RALT     &trans     &trans  &trans         &kp INS   &kp HOME   &kp PG_DN    &kp PG_UP     &kp END  &trans
                               &trans     &trans  &trans       &kp ENTER   &kp BSPC     &kp DEL
            >;
        };

        // TODO
        // Add mouse keys when implemented in ZMK

        media {
            // -----------------------------------------------------------------------------------------------------
            // |     |      |      |       |       |      | # | BOOTLOAD | EP_OFF | BR_D   | BR_U   | EP_ON  |     |
            // |     | LGUI | LALT | LCTRL | LSHFT |      | # | RESET    | PREV   | VOL_D  | VOL_U  | NEXT   |     |
            // |     |      | RALT |       |       |      | # | OUT_BLE  | BT_0   | BT_PRV | BT_NXT | BT_CLR |     |
            //                     | HELD  |       |      | # | STOP     | PLAY   | MUTE   |

            bindings = <
&trans    &trans    &trans     &trans     &trans  &trans     &bootloader  &ext_power EP_OFF  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &ext_power EP_ON  &bt BT_SEL 1
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans      &sys_reset         &kp C_PREV          &kp C_VOL_DN          &kp C_VOL_UP        &kp C_NEXT  &bt BT_SEL 2
&trans    &trans  &kp RALT     &trans     &trans  &trans    &out OUT_BLE       &bt BT_SEL 0            &bt BT_PRV            &bt BT_NXT        &bt BT_CLR  &bt BT_SEL 3
                               &trans     &trans  &trans      &kp C_STOP         &kp C_PLAY            &kp C_MUTE
            >;
        };

        numbers {
            // -----------------------------------------------------------------------------------
            // |     |  [  |  7  |  8  |  9  |  ]  | # |     |       |       |      |      |     |
            // |     |  ;  |  4  |  5  |  6  |  =  | # |     | LSHFT | LCTRL | LALT | LGUI |     |
            // |     |  `  |  1  |  2  |  3  |  \  | # |     |       |       | RALT |      |     |
            //                   |  .  |  0  |  -  | # |     | HELD  |       |

            bindings = <
&trans   &kp LBKT  &kp N7   &kp N8  &kp N9   &kp RBKT    &trans     &trans     &trans    &trans    &trans  &trans
&trans    &kp SQT  &kp N4   &kp N5  &kp N6  &kp EQUAL    &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp GRAVE  &kp N1   &kp N2  &kp N3   &kp BSLH    &trans     &trans     &trans  &kp RALT    &trans  &trans
                           &kp DOT  &kp N0  &kp MINUS    &trans     &trans     &trans
            >;
        };

        symbols {
            // ------------------------------------------------------------------------------------
            // |     |  {  |  &  |  *  |  (  |  }  | # |      |       |       |      |      |     |
            // |     |  :  |  $  |  %  |  ^  |  +  | # |      | LSHFT | LCTRL | LALT | LGUI |     |
            // |     |  ~  |  !  |  @  |  #  |  |  | # |      |       |       | RALT |      |     |
            //                   |  (  |  )  |  _  | # | HELD |       |       |

            bindings = <
&trans   &kp LBRC  &kp AMPS  &kp ASTRK   &kp LPAR        &kp RBRC    &trans     &trans     &trans    &trans    &trans  &trans
&trans    &kp DQT  &kp DLLR  &kp PRCNT  &kp CARET        &kp PLUS    &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp TILDE  &kp EXCL     &kp AT   &kp HASH        &kp PIPE    &trans     &trans     &trans  &kp RALT    &trans  &trans
                              &kp LPAR   &kp RPAR  &kp UNDERSCORE    &trans     &trans     &trans
            >;
        };

        function {
            // ------------------------------------------------------------------------------------------
            // |     |  F12 |  F7  |  F8  |  F9   | PSCRN | # |     |       |       |      |      |     |
            // |     |  F11 |  F4  |  F5  |  F6   | SLCK  | # |     | LSHFT | LCTRL | LALT | LGUI |     |
            // |     |  F10 |  F1  |  F2  |  F3   | PAUSE | # |     |       |       | RALT |      |     |
            //                     | ESC  | SPACE |  TAB  | # |     |       | HELD  |

            bindings = <
&trans  &kp F12  &kp F7   &kp F8     &kp F9        &kp PSCRN    &trans     &trans     &trans    &trans    &trans  &trans
&trans  &kp F11  &kp F4   &kp F5     &kp F6         &kp SLCK    &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp F10  &kp F1   &kp F2     &kp F3  &kp PAUSE_BREAK    &trans     &trans     &trans  &kp RALT    &trans  &trans
                         &kp ESC  &kp SPACE          &kp TAB    &trans     &trans     &trans
            >;
        };

        GAMING_QWERTY {
            bindings = <
&trans  &kp Q  &kp W   &kp E   &kp R    &kp T        &kp Y   &kp U      &kp I    &kp O     &kp P  &trans
 &mo 2  &kp A  &kp S   &kp D   &kp F    &kp G        &kp H   &kp J      &kp K    &kp L  &kp SEMI  &trans
&trans  &kp Z  &kp X   &kp C   &kp V    &kp B        &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &trans
                      &trans  &trans  &kp RET    &kp SPACE  &trans     &trans
            >;
        };
    };
};
